:root {
  /* Optimized Animation Variables with Performance-Focused Timing */
  --anim-fade-in: fade-in 0.3s cubic-bezier(0.1, 0.9, 0.2, 1);
  --anim-fade-out: fade-out 0.3s cubic-bezier(0.1, 0.9, 0.2, 1);
  --anim-fade-up: fade-up 0.35s cubic-bezier(0.25, 0.8, 0.25, 1);
  --anim-fade-down: fade-down 0.35s cubic-bezier(0.25, 0.8, 0.25, 1);

  --anim-scale-up: scale-up 0.25s cubic-bezier(0.25, 0.8, 0.25, 1);
  --anim-scale-down: scale-down 0.25s cubic-bezier(0.25, 0.8, 0.25, 1);

  --anim-zoom-in: zoom-in 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  --anim-zoom-out: zoom-out 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);

  --anim-rotate: rotate 1.5s linear infinite;
  --anim-flip: flip 0.8s cubic-bezier(0.25, 0.8, 0.25, 1);
  --anim-bounce: bounce 1.5s cubic-bezier(0.25, 0.8, 0.25, 1);
  --anim-pulse: pulse 2s cubic-bezier(0.25, 0.8, 0.25, 1) infinite;
  --anim-special: special-effect 1.5s cubic-bezier(0.25, 0.8, 0.25, 1);
  --anim-wiggle: wiggle 1s ease-in-out infinite;

  --anim-slide-in-right: slide-in-right 0.4s cubic-bezier(0.2, 0.9, 0.2, 1);
  --anim-slide-in-bottom: slide-in-bottom 0.4s cubic-bezier(0.2, 0.9, 0.2, 1);
  --anim-slide-in-top: slide-in-top 0.4s cubic-bezier(0.2, 0.9, 0.2, 1);
  --anim-slide-in: slide-in 0.4s cubic-bezier(0.2, 0.9, 0.2, 1);
  --anim-slide-out: slide-out 0.4s cubic-bezier(0.2, 0.9, 0.2, 1);
  --anim-slide-from-right: slide-from-right 0.4s cubic-bezier(0.2, 0.9, 0.2, 1);
  --anim-slide-from-left: slide-from-left 0.4s cubic-bezier(0.2, 0.9, 0.2, 1);
  --anim-slide-to-left: slide-to-left 0.4s cubic-bezier(0.2, 0.9, 0.2, 1);
  --anim-slide-to-right: slide-to-right 0.4s cubic-bezier(0.2, 0.9, 0.2, 1);

  --anim-shake: shake 0.8s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  --anim-flash: flash 1s;
  --anim-blur-in: blur-in 0.6s;
  --anim-swing: swing 1s ease-out;
  --anim-typing: typing 3.5s steps(40, end);
  --anim-spin: custom-spin 1.5s linear infinite;
  --anim-lightbox-open: lightbox-open 0.5s cubic-bezier(0.1, 0.9, 0.2, 1)
    forwards;
}

/* ---------------------------------- */
/* ------------ KeyFrames ----------- */
/* - Hardware-Accelerated Keyframes - */
/* ---------------------------------- */
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fade-up {
  from {
    opacity: 0;
    transform: translate3d(0, 10px, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-down {
  from {
    opacity: 0;
    transform: translate3d(0, -10px, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide-in {
  from {
    transform: translate3d(-100%, 0, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide-out {
  from {
    transform: translate3d(0, 0, 0);
  }
  to {
    transform: translate3d(100%, 0, 0);
  }
}

@keyframes scale-up {
  from {
    transform: scale3d(0.95, 0.95, 1);
  }
  to {
    transform: scale3d(1, 1, 1);
  }
}

@keyframes scale-down {
  from {
    transform: scale3d(1, 1, 1);
  }
  to {
    transform: scale3d(0.95, 0.95, 1);
  }
}

@keyframes rotate {
  from {
    transform: rotate3d(0, 0, 1, 0deg);
  }
  to {
    transform: rotate3d(0, 0, 1, 360deg);
  }
}

@keyframes flip {
  from {
    transform: perspective(600px) rotateY(0deg);
    backface-visibility: hidden;
  }
  to {
    transform: perspective(600px) rotateY(180deg);
    backface-visibility: hidden;
  }
}

@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translate3d(0, 0, 0);
  }
  40% {
    transform: translate3d(0, -30px, 0);
  }
  60% {
    transform: translate3d(0, -15px, 0);
  }
}

@keyframes pulse {
  0%,
  100% {
    transform: scale3d(1, 1, 1);
  }
  50% {
    transform: scale3d(1.05, 1.05, 1);
  }
}

@keyframes special-effect {
  0% {
    opacity: 0;
    transform: scale3d(0.8, 0.8, 1);
  }
  50% {
    opacity: 1;
    transform: scale3d(1.1, 1.1, 1);
  }
  100% {
    opacity: 0;
    transform: scale3d(0.8, 0.8, 1);
  }
}

@keyframes wiggle {
  0%,
  100% {
    transform: rotate3d(0, 0, 1, -3deg);
  }
  50% {
    transform: rotate3d(0, 0, 1, 3deg);
  }
}

@keyframes slide-in-right {
  from {
    transform: translate3d(100%, 0, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide-in-bottom {
  from {
    transform: translate3d(0, 100%, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide-in-top {
  from {
    transform: translate3d(0, -100%, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes shake {
  0%,
  100% {
    transform: translate3d(0, 0, 0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translate3d(-4px, 0, 0);
  }
  20%,
  40%,
  60%,
  80% {
    transform: translate3d(4px, 0, 0);
  }
}

@keyframes flash {
  0%,
  50%,
  100% {
    opacity: 1;
  }
  25%,
  75% {
    opacity: 0.5;
  }
}

@keyframes zoom-in {
  from {
    opacity: 0;
    transform: scale3d(1.5, 1.5, 1);
  }
  to {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

@keyframes zoom-out {
  from {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 1);
  }
  to {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

@keyframes blur-in {
  from {
    opacity: 0;
    filter: blur(8px);
  }
  to {
    opacity: 1;
    filter: blur(0);
  }
}

@keyframes swing {
  20% {
    transform: rotate3d(0, 0, 1, 15deg);
  }
  40% {
    transform: rotate3d(0, 0, 1, -10deg);
  }
  60% {
    transform: rotate3d(0, 0, 1, 5deg);
  }
  80% {
    transform: rotate3d(0, 0, 1, -5deg);
  }
  to {
    transform: rotate3d(0, 0, 1, 0deg);
  }
}

@keyframes typing {
  from {
    transform: scaleX(0);
    transform-origin: left;
  }
  to {
    transform: scaleX(1);
    transform-origin: left;
  }
}

@keyframes custom-spin {
  from {
    transform: rotate3d(0, 0, 1, var(--initial-rotation, 0deg));
  }
  to {
    transform: rotate3d(0, 0, 1, calc(var(--initial-rotation, 0deg) + 360deg));
  }
}

/* --- Image Slider Specific Animations --- */
@keyframes slide-from-right {
  from {
    opacity: 0;
    transform: translate3d(60px, 0, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide-from-left {
  from {
    opacity: 0;
    transform: translate3d(-60px, 0, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide-to-left {
  from {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
  to {
    opacity: 0;
    transform: translate3d(-60px, 0, 0);
  }
}

@keyframes slide-to-right {
  from {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
  to {
    opacity: 0;
    transform: translate3d(60px, 0, 0);
  }
}

@keyframes lightbox-open {
  from {
    background-color: rgba(0, 0, 0, 0);
    backdrop-filter: blur(0px);
  }
  to {
    background-color: rgba(0, 0, 0, 0.95);
    backdrop-filter: blur(12px);
  }
}

/* ------------------------------- */
/* ----- Performance Utility ----- */
/* ------------------------------- */
/* Forces rendering to be handled by the GPU rather than the CPU. Use only for complex animations. */
/* Use for fixed elements or custom animations not covered by existing classes */
@utility gpu-accelerated {
  transform: translateZ(0); /* Force GPU acceleration */
  backface-visibility: hidden;
  perspective: 1000px;
  transform-style: preserve-3d;
}

/* Base class for all animated elements that applies core performance optimizations. */
/* Apply to parent containers with multiple animations inside */
@utility animated {
  backface-visibility: hidden;
  transform-style: preserve-3d;
  contain: paint layout; /* Improves performance by limiting repaints */
}

/* --------------------------------- */
/* ------ Animation Classes -------- */
/* -- Composite animation classes -- */
/* ------------ with ---------------  */
/* -- hardware acceleration hints -- */
/* --------------------------------- */

/* ----- Simple Animations ----- */
/* Optimized for minimal GPU usage on simple transitions */
@utility animate-fade-in {
  animation: var(--anim-fade-in);
  will-change: opacity;
}

@utility animate-fade-out {
  animation: var(--anim-fade-out);
  will-change: opacity;
}

@utility animate-flash {
  animation: var(--anim-flash);
  will-change: opacity;
}

/* ----- Transform Animations ----- */
/* Only use will-change for the specific properties being animated */
@utility animate-fade-up {
  animation: var(--anim-fade-up);
  will-change: transform, opacity;
}

@utility animate-fade-down {
  animation: var(--anim-fade-down);
  will-change: transform, opacity;
}

@utility animate-slide-in {
  animation: var(--anim-slide-in);
  will-change: transform;
}

@utility animate-slide-out {
  animation: var(--anim-slide-out);
  will-change: transform;
}

@utility animate-slide-in-right {
  animation: var(--anim-slide-in-right);
  will-change: transform;
}

@utility animate-slide-in-bottom {
  animation: var(--anim-slide-in-bottom);
  will-change: transform;
}

@utility animate-slide-in-top {
  animation: var(--anim-slide-in-top);
  will-change: transform;
}

@utility animate-scale-up {
  animation: var(--anim-scale-up);
  will-change: transform;
}

@utility animate-scale-down {
  animation: var(--anim-scale-down);
  will-change: transform;
}

@utility animate-shake {
  animation: var(--anim-shake);
  will-change: transform;
}

/* ----- Complex Animations ----- */
/* Apply GPU acceleration hints for complex animations that benefit from it */
@utility animate-flip {
  animation: var(--anim-flip);
  backface-visibility: hidden;
  will-change: transform;
  transform: translateZ(0);
}

@utility animate-rotate {
  animation: var(--anim-rotate);
  will-change: transform;
  transform: translateZ(0);
}

@utility animate-bounce {
  animation: var(--anim-bounce);
  will-change: transform;
}

@utility animate-pulse {
  animation: var(--anim-pulse);
  will-change: transform;
}

@utility animate-special {
  animation: var(--anim-special);
  will-change: transform, opacity;
}

@utility animate-wiggle {
  animation: var(--anim-wiggle);
  will-change: transform;
}

@utility animate-zoom-in {
  animation: var(--anim-zoom-in);
  will-change: transform, opacity;
}

@utility animate-zoom-out {
  animation: var(--anim-zoom-out);
  will-change: transform, opacity;
}

@utility animate-blur-in {
  animation: var(--anim-blur-in);
  will-change: opacity, filter;
}

@utility animate-swing {
  transform-origin: top center;
  animation: var(--anim-swing);
  will-change: transform;
}

@utility animate-typing {
  display: inline-block;
  overflow: hidden;
  white-space: nowrap;
  animation: var(--anim-typing);
  width: 0;
}

@utility animate-appear {
  opacity: 0;
  transform: translate3d(0, 100px, 0);
  animation: var(--anim-fade-up);
  animation-fill-mode: forwards;
  will-change: transform, opacity;
}

@utility animate-spin {
  animation: var(--anim-spin);
  will-change: transform;
  transform: translateZ(0);
}

@utility animate-slide-from-right {
  animation: var(--anim-slide-from-right);
  will-change: transform, opacity;
}

@utility animate-slide-from-left {
  animation: var(--anim-slide-from-left);
  will-change: transform, opacity;
}

@utility animate-slide-to-left {
  animation: var(--anim-slide-to-left);
  will-change: transform, opacity;
}

@utility animate-slide-to-right {
  animation: var(--anim-slide-to-right);
  will-change: transform, opacity;
}

@utility animate-lightbox-open {
  animation: var(--anim-lightbox-open);
  will-change: backdrop-filter, background-color;
}

/* Performance utilities for scroll optimization */
@utility scroll-active {
  animation-play-state: paused !important;
  will-change: auto !important; /* Reset will-change during scroll */
}

/* Animation delay utilities */
@utility animation-delay-* {
  /* prettier-ignore */
  animation-delay: --value(integer)ms;
}

/* Animation duration utilities */
@utility animation-duration-* {
  /* prettier-ignore */
  animation-duration: --value(integer)ms;
}

@utility animation-duration-infinite {
  animation-duration: infinite;
}

/* Animation fill mode utilities */
@utility fill-forwards {
  animation-fill-mode: forwards;
}
@utility fill-backwards {
  animation-fill-mode: backwards;
}
@utility fill-both {
  animation-fill-mode: both;
}

/* Animation play state utility classes */
@utility animation-paused {
  animation-play-state: paused !important;
}

@utility animation-running {
  animation-play-state: running !important;
}

/* For elements that should animate only once when they appear */
@utility animate-once {
  animation-iteration-count: 1 !important;
}

/* Improved accessibility - respect user preference for reduced motion */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

@utility reduced-motion {
  animation: none !important;
  transition: none !important;
}

/* Intersection Observer Animation Support */
/* Base class for elements that will animate when in view */
@utility animate-when-visible {
  opacity: 0.01; /* Start invisible */
  transition: opacity 0.2s ease-out;
  will-change: transform, opacity;
  visibility: visible; /* Keep element in layout */
  animation-play-state: paused !important;
}

/* Applied by JS when element comes into view */
@utility is-visible {
  opacity: 1;
  animation-play-state: running !important;
}
