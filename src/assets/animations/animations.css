:root {
  /* Optimized Animation Variables with Performance-Focused Timing */
  --animate-fade-in: fade-in 0.3s cubic-bezier(0.1, 0.9, 0.2, 1);
  --animate-fade-out: fade-out 0.3s cubic-bezier(0.1, 0.9, 0.2, 1);
  --animate-fade-up: fade-up 0.35s cubic-bezier(0.25, 0.8, 0.25, 1);
  --animate-fade-down: fade-down 0.35s cubic-bezier(0.25, 0.8, 0.25, 1);
  --animate-slide-in: slide-in 0.4s cubic-bezier(0.2, 0.9, 0.2, 1);
  --animate-slide-out: slide-out 0.4s cubic-bezier(0.2, 0.9, 0.2, 1);
  --animate-scale-up: scale-up 0.25s cubic-bezier(0.25, 0.8, 0.25, 1);
  --animate-scale-down: scale-down 0.25s cubic-bezier(0.25, 0.8, 0.25, 1);
  --animate-rotate: rotate 1.5s linear infinite;
  --animate-flip: flip 0.8s cubic-bezier(0.25, 0.8, 0.25, 1);
  --animate-bounce: bounce 1.5s cubic-bezier(0.25, 0.8, 0.25, 1);
  --animate-pulse: pulse 2s cubic-bezier(0.25, 0.8, 0.25, 1) infinite;
  --animate-special: special-effect 1.5s cubic-bezier(0.25, 0.8, 0.25, 1);
  --animate-wiggle: wiggle 1s ease-in-out infinite;
}

/* Hardware-Accelerated Keyframes */
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fade-up {
  from {
    opacity: 0;
    transform: translate3d(0, 10px, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-down {
  from {
    opacity: 0;
    transform: translate3d(0, -10px, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide-in {
  from {
    transform: translate3d(-100%, 0, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slide-out {
  from {
    transform: translate3d(0, 0, 0);
  }
  to {
    transform: translate3d(100%, 0, 0);
  }
}

@keyframes scale-up {
  from {
    transform: scale3d(0.95, 0.95, 1);
  }
  to {
    transform: scale3d(1, 1, 1);
  }
}

@keyframes scale-down {
  from {
    transform: scale3d(1, 1, 1);
  }
  to {
    transform: scale3d(0.95, 0.95, 1);
  }
}

/* Optimized 3D transforms for better GPU acceleration */
@keyframes rotate {
  from {
    transform: rotate3d(0, 0, 1, 0deg);
  }
  to {
    transform: rotate3d(0, 0, 1, 360deg);
  }
}

@keyframes flip {
  from {
    transform: perspective(600px) rotateY(0deg);
    backface-visibility: hidden;
  }
  to {
    transform: perspective(600px) rotateY(180deg);
    backface-visibility: hidden;
  }
}

/* Physics-based animations with smoother transitions */
@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translate3d(0, 0, 0);
  }
  40% {
    transform: translate3d(0, -30px, 0);
  }
  60% {
    transform: translate3d(0, -15px, 0);
  }
}

@keyframes pulse {
  0%,
  100% {
    transform: scale3d(1, 1, 1);
  }
  50% {
    transform: scale3d(1.05, 1.05, 1);
  }
}

@keyframes special-effect {
  0% {
    opacity: 0;
    transform: scale3d(0.8, 0.8, 1);
  }
  50% {
    opacity: 1;
    transform: scale3d(1.1, 1.1, 1);
  }
  100% {
    opacity: 0;
    transform: scale3d(0.8, 0.8, 1);
  }
}

@keyframes wiggle {
  0%,
  100% {
    transform: rotate3d(0, 0, 1, -3deg);
  }
  50% {
    transform: rotate3d(0, 0, 1, 3deg);
  }
}

/* Composite animation classes with hardware acceleration hints */
.animated {
  backface-visibility: hidden;
  transform-style: preserve-3d;
  contain: paint layout; /* Improves performance by limiting repaints */
}

/* Performance-optimized animation utility classes */
.animate-fade-in {
  animation: var(--animate-fade-in);
  will-change: opacity;
}

.animate-fade-out {
  animation: var(--animate-fade-out);
  will-change: opacity;
}

.animate-fade-up {
  animation: var(--animate-fade-up);
  will-change: transform, opacity;
}

.animate-fade-down {
  animation: var(--animate-fade-down);
  will-change: transform, opacity;
}

.animate-slide-in {
  animation: var(--animate-slide-in);
  will-change: transform;
}

.animate-slide-out {
  animation: var(--animate-slide-out);
  will-change: transform;
}

.animate-scale-up {
  animation: var(--animate-scale-up);
  will-change: transform;
}

.animate-scale-down {
  animation: var(--animate-scale-down);
  will-change: transform;
}

.animate-rotate {
  animation: var(--animate-rotate);
  will-change: transform;
}

.animate-flip {
  animation: var(--animate-flip);
  backface-visibility: hidden;
  will-change: transform;
}

.animate-bounce {
  animation: var(--animate-bounce);
  will-change: transform;
}

.animate-pulse {
  animation: var(--animate-pulse);
  will-change: transform;
}

.animate-special {
  animation: var(--animate-special);
  will-change: transform, opacity;
}

.animate-wiggle {
  animation: var(--animate-wiggle);
  will-change: transform;
}

/* Performance utilities for scroll optimization */
.scroll-active {
  animation-play-state: paused !important;
  will-change: auto !important; /* Reset will-change during scroll */
}

/* Animation delay utilities */
.delay-100 {
  animation-delay: 100ms;
}
.delay-200 {
  animation-delay: 200ms;
}
.delay-300 {
  animation-delay: 300ms;
}
.delay-500 {
  animation-delay: 500ms;
}

/* Animation duration utilities */
.duration-100 {
  animation-duration: 100ms;
}
.duration-200 {
  animation-duration: 200ms;
}
.duration-300 {
  animation-duration: 300ms;
}
.duration-500 {
  animation-duration: 500ms;
}
.duration-700 {
  animation-duration: 700ms;
}
.duration-1000 {
  animation-duration: 1000ms;
}
.duration-1500 {
  animation-duration: 1500ms;
}
.duration-2000 {
  animation-duration: 2s;
}

/* Improved accessibility - respect user preference for reduced motion */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  .reduced-motion {
    animation: none !important;
    transition: none !important;
  }
}

/* Fixed element rendering optimization */
.gpu-accelerated {
  transform: translateZ(0); /* Force GPU acceleration */
  backface-visibility: hidden;
  perspective: 1000px;
  transform-style: preserve-3d;
}
